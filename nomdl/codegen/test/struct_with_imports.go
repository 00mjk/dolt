// This file was generated by nomdl/codegen.

package test

import (
	"github.com/attic-labs/noms/nomdl/codegen/test/gen/sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d"

	"github.com/attic-labs/noms/ref"
	"github.com/attic-labs/noms/types"
)

var __testPackageInFile_struct_with_imports_CachedRef = __testPackageInFile_struct_with_imports_Ref()

// This function builds up a Noms value that describes the type
// package implemented by this file and registers it with the global
// type package definition cache.
func __testPackageInFile_struct_with_imports_Ref() ref.Ref {
	p := types.NewPackage([]types.TypeRef{
		types.MakeEnumTypeRef("E", "E1", "Ignored"),
		types.MakeStructTypeRef("ImportUser",
			[]types.Field{
				types.Field{"importedStruct", types.MakeTypeRef(ref.Parse("sha1-d31b592f480b7659b03b72a7d1271f31dde57b2d"), 0), false},
				types.Field{"enum", types.MakeTypeRef(ref.Ref{}, 0), false},
			},
			types.Choices{},
		),
	}, []ref.Ref{
		ref.Parse("sha1-d31b592f480b7659b03b72a7d1271f31dde57b2d"),
	})
	return types.RegisterPackage(&p)
}

// E

type E uint32

const (
	E1 E = iota
	Ignored
)

// ImportUser

type ImportUser struct {
	m   types.Map
	ref *ref.Ref
}

func NewImportUser() ImportUser {
	return ImportUser{types.NewMap(
		types.NewString("$type"), types.MakeTypeRef(__testPackageInFile_struct_with_imports_CachedRef, 1),
		types.NewString("importedStruct"), sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.NewD(),
		types.NewString("enum"), types.UInt32(0),
	), &ref.Ref{}}
}

type ImportUserDef struct {
	ImportedStruct sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.DDef
	Enum           E
}

func (def ImportUserDef) New() ImportUser {
	return ImportUser{
		types.NewMap(
			types.NewString("$type"), types.MakeTypeRef(__testPackageInFile_struct_with_imports_CachedRef, 1),
			types.NewString("importedStruct"), def.ImportedStruct.New(),
			types.NewString("enum"), types.UInt32(def.Enum),
		), &ref.Ref{}}
}

func (s ImportUser) Def() (d ImportUserDef) {
	d.ImportedStruct = s.m.Get(types.NewString("importedStruct")).(sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D).Def()
	d.Enum = E(s.m.Get(types.NewString("enum")).(types.UInt32))
	return
}

var __typeRefForImportUser = types.MakeTypeRef(__testPackageInFile_struct_with_imports_CachedRef, 1)

func (m ImportUser) TypeRef() types.TypeRef {
	return __typeRefForImportUser
}

func init() {
	types.RegisterFromValFunction(__typeRefForImportUser, func(v types.Value) types.Value {
		return ImportUserFromVal(v)
	})
}

func ImportUserFromVal(val types.Value) ImportUser {
	// TODO: Do we still need FromVal?
	if val, ok := val.(ImportUser); ok {
		return val
	}
	// TODO: Validate here
	return ImportUser{val.(types.Map), &ref.Ref{}}
}

func (s ImportUser) InternalImplementation() types.Map {
	return s.m
}

func (s ImportUser) Equals(other types.Value) bool {
	if other, ok := other.(ImportUser); ok {
		return s.Ref() == other.Ref()
	}
	return false
}

func (s ImportUser) Ref() ref.Ref {
	return types.EnsureRef(s.ref, s)
}

func (s ImportUser) Chunks() (futures []types.Future) {
	futures = append(futures, s.TypeRef().Chunks()...)
	futures = append(futures, s.m.Chunks()...)
	return
}

func (s ImportUser) ImportedStruct() sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D {
	return s.m.Get(types.NewString("importedStruct")).(sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D)
}

func (s ImportUser) SetImportedStruct(val sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D) ImportUser {
	return ImportUser{s.m.Set(types.NewString("importedStruct"), val), &ref.Ref{}}
}

func (s ImportUser) Enum() E {
	return E(s.m.Get(types.NewString("enum")).(types.UInt32))
}

func (s ImportUser) SetEnum(val E) ImportUser {
	return ImportUser{s.m.Set(types.NewString("enum"), types.UInt32(val)), &ref.Ref{}}
}

// ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D

type ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D struct {
	l   types.List
	ref *ref.Ref
}

func NewListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D() ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D {
	return ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D{types.NewList(), &ref.Ref{}}
}

type ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_DDef []sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.DDef

func (def ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_DDef) New() ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D {
	l := make([]types.Value, len(def))
	for i, d := range def {
		l[i] = d.New()
	}
	return ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D{types.NewList(l...), &ref.Ref{}}
}

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) Def() ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_DDef {
	d := make([]sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.DDef, l.Len())
	for i := uint64(0); i < l.Len(); i++ {
		d[i] = l.l.Get(i).(sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D).Def()
	}
	return d
}

func ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_DFromVal(val types.Value) ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D {
	// TODO: Do we still need FromVal?
	if val, ok := val.(ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D); ok {
		return val
	}
	// TODO: Validate here
	return ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D{val.(types.List), &ref.Ref{}}
}

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) InternalImplementation() types.List {
	return l.l
}

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) Equals(other types.Value) bool {
	if other, ok := other.(ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D); ok {
		return l.Ref() == other.Ref()
	}
	return false
}

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) Ref() ref.Ref {
	return types.EnsureRef(l.ref, l)
}

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) Chunks() (futures []types.Future) {
	futures = append(futures, l.TypeRef().Chunks()...)
	futures = append(futures, l.l.Chunks()...)
	return
}

// A Noms Value that describes ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D.
var __typeRefForListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D types.TypeRef

func (m ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) TypeRef() types.TypeRef {
	return __typeRefForListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D
}

func init() {
	__typeRefForListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D = types.MakeCompoundTypeRef("", types.ListKind, types.MakeTypeRef(ref.Parse("sha1-d31b592f480b7659b03b72a7d1271f31dde57b2d"), 0))
	types.RegisterFromValFunction(__typeRefForListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D, func(v types.Value) types.Value {
		return ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_DFromVal(v)
	})
}

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) Len() uint64 {
	return l.l.Len()
}

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) Empty() bool {
	return l.Len() == uint64(0)
}

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) Get(i uint64) sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D {
	return l.l.Get(i).(sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D)
}

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) Slice(idx uint64, end uint64) ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D {
	return ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D{l.l.Slice(idx, end), &ref.Ref{}}
}

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) Set(i uint64, val sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D) ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D {
	return ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D{l.l.Set(i, val), &ref.Ref{}}
}

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) Append(v ...sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D) ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D {
	return ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D{l.l.Append(l.fromElemSlice(v)...), &ref.Ref{}}
}

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) Insert(idx uint64, v ...sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D) ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D {
	return ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D{l.l.Insert(idx, l.fromElemSlice(v)...), &ref.Ref{}}
}

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) Remove(idx uint64, end uint64) ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D {
	return ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D{l.l.Remove(idx, end), &ref.Ref{}}
}

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) RemoveAt(idx uint64) ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D {
	return ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D{(l.l.RemoveAt(idx)), &ref.Ref{}}
}

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) fromElemSlice(p []sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D) []types.Value {
	r := make([]types.Value, len(p))
	for i, v := range p {
		r[i] = v
	}
	return r
}

type ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_DIterCallback func(v sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D, i uint64) (stop bool)

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) Iter(cb ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_DIterCallback) {
	l.l.Iter(func(v types.Value, i uint64) bool {
		return cb(v.(sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D), i)
	})
}

type ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_DIterAllCallback func(v sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D, i uint64)

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) IterAll(cb ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_DIterAllCallback) {
	l.l.IterAll(func(v types.Value, i uint64) {
		cb(v.(sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D), i)
	})
}

type ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_DFilterCallback func(v sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D, i uint64) (keep bool)

func (l ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D) Filter(cb ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_DFilterCallback) ListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D {
	nl := NewListOfsha1_d31b592f480b7659b03b72a7d1271f31dde57b2d_D()
	l.IterAll(func(v sha1_d31b592f480b7659b03b72a7d1271f31dde57b2d.D, i uint64) {
		if cb(v, i) {
			nl = nl.Append(v)
		}
	})
	return nl
}
