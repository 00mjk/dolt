// This file was generated by nomdl/codegen.

package test

import (
	"github.com/attic-labs/noms/nomdl/codegen/test/gen/sha1_f9397427926127f67d8f3edb21c92bf642262e9b"
	"github.com/attic-labs/noms/ref"
	"github.com/attic-labs/noms/types"
)

var __testPackageInFile_struct_with_imports_CachedRef = __testPackageInFile_struct_with_imports_Ref()

// This function builds up a Noms value that describes the type
// package implemented by this file and registers it with the global
// type package definition cache.
func __testPackageInFile_struct_with_imports_Ref() ref.Ref {
	p := types.PackageDef{
		NamedTypes: types.MapOfStringToTypeRefDef{

			"E": types.MakeEnumTypeRef("E", "E1", "Ignored"),
			"ImportUser": types.MakeStructTypeRef("ImportUser",
				[]types.Field{
					types.Field{"importedStruct", types.MakeTypeRef("D", ref.Parse("sha1-f9397427926127f67d8f3edb21c92bf642262e9b")), false},
					types.Field{"enum", types.MakeTypeRef("E", ref.Ref{}), false},
				},
				types.Choices{},
			),
		},
	}.New()
	return types.RegisterPackage(&p)
}

// E

type E uint32

const (
	E1 E = iota
	Ignored
)

// ImportUser

type ImportUser struct {
	m types.Map
}

func NewImportUser() ImportUser {
	return ImportUser{types.NewMap(
		types.NewString("$name"), types.NewString("ImportUser"),
		types.NewString("$type"), types.MakeTypeRef("ImportUser", __testPackageInFile_struct_with_imports_CachedRef),
		types.NewString("importedStruct"), sha1_f9397427926127f67d8f3edb21c92bf642262e9b.NewD().NomsValue(),
		types.NewString("enum"), types.UInt32(0),
	)}
}

type ImportUserDef struct {
	ImportedStruct sha1_f9397427926127f67d8f3edb21c92bf642262e9b.DDef
	Enum           E
}

func (def ImportUserDef) New() ImportUser {
	return ImportUser{
		types.NewMap(
			types.NewString("$name"), types.NewString("ImportUser"),
			types.NewString("$type"), types.MakeTypeRef("ImportUser", __testPackageInFile_struct_with_imports_CachedRef),
			types.NewString("importedStruct"), def.ImportedStruct.New().NomsValue(),
			types.NewString("enum"), types.UInt32(def.Enum),
		)}
}

func (s ImportUser) Def() (d ImportUserDef) {
	d.ImportedStruct = sha1_f9397427926127f67d8f3edb21c92bf642262e9b.DFromVal(s.m.Get(types.NewString("importedStruct"))).Def()
	d.Enum = E(s.m.Get(types.NewString("enum")).(types.UInt32))
	return
}

var __typeRefForImportUser = types.MakeTypeRef("ImportUser", __testPackageInFile_struct_with_imports_CachedRef)

func (m ImportUser) TypeRef() types.TypeRef {
	return __typeRefForImportUser
}

func init() {
	types.RegisterFromValFunction(__typeRefForImportUser, func(v types.Value) types.NomsValue {
		return ImportUserFromVal(v)
	})
}

func ImportUserFromVal(val types.Value) ImportUser {
	// TODO: Validate here
	return ImportUser{val.(types.Map)}
}

func (s ImportUser) NomsValue() types.Value {
	return s.m
}

func (s ImportUser) Equals(other types.Value) bool {
	if other, ok := other.(ImportUser); ok {
		return s.m.Equals(other.m)
	}
	return false
}

func (s ImportUser) Ref() ref.Ref {
	return s.m.Ref()
}

func (s ImportUser) Chunks() []types.Future {
	return s.m.Chunks()
}

func (s ImportUser) ImportedStruct() sha1_f9397427926127f67d8f3edb21c92bf642262e9b.D {
	return sha1_f9397427926127f67d8f3edb21c92bf642262e9b.DFromVal(s.m.Get(types.NewString("importedStruct")))
}

func (s ImportUser) SetImportedStruct(val sha1_f9397427926127f67d8f3edb21c92bf642262e9b.D) ImportUser {
	return ImportUser{s.m.Set(types.NewString("importedStruct"), val.NomsValue())}
}

func (s ImportUser) Enum() E {
	return E(s.m.Get(types.NewString("enum")).(types.UInt32))
}

func (s ImportUser) SetEnum(val E) ImportUser {
	return ImportUser{s.m.Set(types.NewString("enum"), types.UInt32(val))}
}
