// This file was generated by nomdl/codegen.

package test

import (
	"github.com/attic-labs/noms/ref"
	"github.com/attic-labs/noms/types"
)

// Struct

type StructDef struct {
	S string
	B bool
}

type Struct struct {
	l types.List
}

func NewStruct() Struct {
	return Struct{types.NewList(
		types.NewString(""),
		types.Bool(false),
	)}
}

func (def StructDef) New() Struct {
	return Struct{
		types.NewList(
			types.NewString(def.S),
			types.Bool(def.B),
		)}
}

func (self Struct) Def() StructDef {
	return StructDef{
		self.l.Get(0).(types.String).String(),
		bool(self.l.Get(1).(types.Bool)),
	}
}

func StructFromVal(val types.Value) Struct {
	// TODO: Validate here
	return Struct{val.(types.List)}
}

func (self Struct) NomsValue() types.Value {
	return self.l
}

func (self Struct) Equals(p Struct) bool {
	return self.l.Equals(p.l)
}

func (self Struct) Ref() ref.Ref {
	return self.l.Ref()
}

func (self Struct) S() string {
	return self.l.Get(0).(types.String).String()
}

func (self Struct) SetS(val string) Struct {
	return Struct{self.l.Set(0, types.NewString(val))}
}

func (self Struct) B() bool {
	return bool(self.l.Get(1).(types.Bool))
}

func (self Struct) SetB(val bool) Struct {
	return Struct{self.l.Set(1, types.Bool(val))}
}
