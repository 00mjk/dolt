// This file was generated by nomdl/codegen.

package test

import (
	"github.com/attic-labs/noms/ref"
	"github.com/attic-labs/noms/types"
)

// This function builds up a Noms value that describes the type
// package implemented by this file and registers it with the global
// type package definition cache.
func __testPackageInFile_struct_primitives_Ref() types.Ref {
	p := types.PackageDef{
		Types: types.MapOfStringToTypeRefDef{

			"StructPrimitives": __typeRefOfStructPrimitives(),
		},
	}.New()
	return types.Ref{R: types.RegisterPackage(&p)}
}

// StructPrimitives

type StructPrimitives struct {
	m types.Map
}

func NewStructPrimitives() StructPrimitives {
	return StructPrimitives{types.NewMap(
		types.NewString("$name"), types.NewString("StructPrimitives"),
		types.NewString("$type"), types.MakeTypeRef(types.NewString("StructPrimitives"), __testPackageInFile_struct_primitives_Ref()),
		types.NewString("uint64"), types.UInt64(0),
		types.NewString("uint32"), types.UInt32(0),
		types.NewString("uint16"), types.UInt16(0),
		types.NewString("uint8"), types.UInt8(0),
		types.NewString("int64"), types.Int64(0),
		types.NewString("int32"), types.Int32(0),
		types.NewString("int16"), types.Int16(0),
		types.NewString("int8"), types.Int8(0),
		types.NewString("float64"), types.Float64(0),
		types.NewString("float32"), types.Float32(0),
		types.NewString("bool"), types.Bool(false),
		types.NewString("string"), types.NewString(""),
		types.NewString("blob"), types.NewEmptyBlob(),
		types.NewString("value"), types.Bool(false),
	)}
}

type StructPrimitivesDef struct {
	Uint64  uint64
	Uint32  uint32
	Uint16  uint16
	Uint8   uint8
	Int64   int64
	Int32   int32
	Int16   int16
	Int8    int8
	Float64 float64
	Float32 float32
	Bool    bool
	String  string
	Blob    types.Blob
	Value   types.Value
}

func (def StructPrimitivesDef) New() StructPrimitives {
	return StructPrimitives{
		types.NewMap(
			types.NewString("$name"), types.NewString("StructPrimitives"),
			types.NewString("$type"), types.MakeTypeRef(types.NewString("StructPrimitives"), __testPackageInFile_struct_primitives_Ref()),
			types.NewString("uint64"), types.UInt64(def.Uint64),
			types.NewString("uint32"), types.UInt32(def.Uint32),
			types.NewString("uint16"), types.UInt16(def.Uint16),
			types.NewString("uint8"), types.UInt8(def.Uint8),
			types.NewString("int64"), types.Int64(def.Int64),
			types.NewString("int32"), types.Int32(def.Int32),
			types.NewString("int16"), types.Int16(def.Int16),
			types.NewString("int8"), types.Int8(def.Int8),
			types.NewString("float64"), types.Float64(def.Float64),
			types.NewString("float32"), types.Float32(def.Float32),
			types.NewString("bool"), types.Bool(def.Bool),
			types.NewString("string"), types.NewString(def.String),
			types.NewString("blob"), def.Blob,
			types.NewString("value"), def.Value,
		)}
}

func (self StructPrimitives) Def() StructPrimitivesDef {
	return StructPrimitivesDef{
		uint64(self.m.Get(types.NewString("uint64")).(types.UInt64)),
		uint32(self.m.Get(types.NewString("uint32")).(types.UInt32)),
		uint16(self.m.Get(types.NewString("uint16")).(types.UInt16)),
		uint8(self.m.Get(types.NewString("uint8")).(types.UInt8)),
		int64(self.m.Get(types.NewString("int64")).(types.Int64)),
		int32(self.m.Get(types.NewString("int32")).(types.Int32)),
		int16(self.m.Get(types.NewString("int16")).(types.Int16)),
		int8(self.m.Get(types.NewString("int8")).(types.Int8)),
		float64(self.m.Get(types.NewString("float64")).(types.Float64)),
		float32(self.m.Get(types.NewString("float32")).(types.Float32)),
		bool(self.m.Get(types.NewString("bool")).(types.Bool)),
		self.m.Get(types.NewString("string")).(types.String).String(),
		self.m.Get(types.NewString("blob")).(types.Blob),
		self.m.Get(types.NewString("value")),
	}
}

// Creates and returns a Noms Value that describes StructPrimitives.
func __typeRefOfStructPrimitives() types.TypeRef {
	return types.MakeStructTypeRef(types.NewString("StructPrimitives"),
		types.NewList(
			types.NewString("uint64"), types.MakePrimitiveTypeRef(types.UInt64Kind),
			types.NewString("uint32"), types.MakePrimitiveTypeRef(types.UInt32Kind),
			types.NewString("uint16"), types.MakePrimitiveTypeRef(types.UInt16Kind),
			types.NewString("uint8"), types.MakePrimitiveTypeRef(types.UInt8Kind),
			types.NewString("int64"), types.MakePrimitiveTypeRef(types.Int64Kind),
			types.NewString("int32"), types.MakePrimitiveTypeRef(types.Int32Kind),
			types.NewString("int16"), types.MakePrimitiveTypeRef(types.Int16Kind),
			types.NewString("int8"), types.MakePrimitiveTypeRef(types.Int8Kind),
			types.NewString("float64"), types.MakePrimitiveTypeRef(types.Float64Kind),
			types.NewString("float32"), types.MakePrimitiveTypeRef(types.Float32Kind),
			types.NewString("bool"), types.MakePrimitiveTypeRef(types.BoolKind),
			types.NewString("string"), types.MakePrimitiveTypeRef(types.StringKind),
			types.NewString("blob"), types.MakePrimitiveTypeRef(types.BlobKind),
			types.NewString("value"), types.MakePrimitiveTypeRef(types.ValueKind),
		),
		nil)

}

func StructPrimitivesFromVal(val types.Value) StructPrimitives {
	// TODO: Validate here
	return StructPrimitives{val.(types.Map)}
}

func (self StructPrimitives) NomsValue() types.Value {
	return self.m
}

func (self StructPrimitives) Equals(other StructPrimitives) bool {
	return self.m.Equals(other.m)
}

func (self StructPrimitives) Ref() ref.Ref {
	return self.m.Ref()
}

func (self StructPrimitives) Type() types.TypeRef {
	return self.m.Get(types.NewString("$type")).(types.TypeRef)
}

func (self StructPrimitives) Uint64() uint64 {
	return uint64(self.m.Get(types.NewString("uint64")).(types.UInt64))
}

func (self StructPrimitives) SetUint64(val uint64) StructPrimitives {
	return StructPrimitives{self.m.Set(types.NewString("uint64"), types.UInt64(val))}
}

func (self StructPrimitives) Uint32() uint32 {
	return uint32(self.m.Get(types.NewString("uint32")).(types.UInt32))
}

func (self StructPrimitives) SetUint32(val uint32) StructPrimitives {
	return StructPrimitives{self.m.Set(types.NewString("uint32"), types.UInt32(val))}
}

func (self StructPrimitives) Uint16() uint16 {
	return uint16(self.m.Get(types.NewString("uint16")).(types.UInt16))
}

func (self StructPrimitives) SetUint16(val uint16) StructPrimitives {
	return StructPrimitives{self.m.Set(types.NewString("uint16"), types.UInt16(val))}
}

func (self StructPrimitives) Uint8() uint8 {
	return uint8(self.m.Get(types.NewString("uint8")).(types.UInt8))
}

func (self StructPrimitives) SetUint8(val uint8) StructPrimitives {
	return StructPrimitives{self.m.Set(types.NewString("uint8"), types.UInt8(val))}
}

func (self StructPrimitives) Int64() int64 {
	return int64(self.m.Get(types.NewString("int64")).(types.Int64))
}

func (self StructPrimitives) SetInt64(val int64) StructPrimitives {
	return StructPrimitives{self.m.Set(types.NewString("int64"), types.Int64(val))}
}

func (self StructPrimitives) Int32() int32 {
	return int32(self.m.Get(types.NewString("int32")).(types.Int32))
}

func (self StructPrimitives) SetInt32(val int32) StructPrimitives {
	return StructPrimitives{self.m.Set(types.NewString("int32"), types.Int32(val))}
}

func (self StructPrimitives) Int16() int16 {
	return int16(self.m.Get(types.NewString("int16")).(types.Int16))
}

func (self StructPrimitives) SetInt16(val int16) StructPrimitives {
	return StructPrimitives{self.m.Set(types.NewString("int16"), types.Int16(val))}
}

func (self StructPrimitives) Int8() int8 {
	return int8(self.m.Get(types.NewString("int8")).(types.Int8))
}

func (self StructPrimitives) SetInt8(val int8) StructPrimitives {
	return StructPrimitives{self.m.Set(types.NewString("int8"), types.Int8(val))}
}

func (self StructPrimitives) Float64() float64 {
	return float64(self.m.Get(types.NewString("float64")).(types.Float64))
}

func (self StructPrimitives) SetFloat64(val float64) StructPrimitives {
	return StructPrimitives{self.m.Set(types.NewString("float64"), types.Float64(val))}
}

func (self StructPrimitives) Float32() float32 {
	return float32(self.m.Get(types.NewString("float32")).(types.Float32))
}

func (self StructPrimitives) SetFloat32(val float32) StructPrimitives {
	return StructPrimitives{self.m.Set(types.NewString("float32"), types.Float32(val))}
}

func (self StructPrimitives) Bool() bool {
	return bool(self.m.Get(types.NewString("bool")).(types.Bool))
}

func (self StructPrimitives) SetBool(val bool) StructPrimitives {
	return StructPrimitives{self.m.Set(types.NewString("bool"), types.Bool(val))}
}

func (self StructPrimitives) String() string {
	return self.m.Get(types.NewString("string")).(types.String).String()
}

func (self StructPrimitives) SetString(val string) StructPrimitives {
	return StructPrimitives{self.m.Set(types.NewString("string"), types.NewString(val))}
}

func (self StructPrimitives) Blob() types.Blob {
	return self.m.Get(types.NewString("blob")).(types.Blob)
}

func (self StructPrimitives) SetBlob(val types.Blob) StructPrimitives {
	return StructPrimitives{self.m.Set(types.NewString("blob"), val)}
}

func (self StructPrimitives) Value() types.Value {
	return self.m.Get(types.NewString("value"))
}

func (self StructPrimitives) SetValue(val types.Value) StructPrimitives {
	return StructPrimitives{self.m.Set(types.NewString("value"), val)}
}
